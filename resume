#!/bin/sh

# Imprime mensajes de errores.
error() {
  printf '%s.\n' "$1" >&2
  exit 1
}

# Convierte un archivo Markdown a HTML.
markdown2html() {
  smu "$1" 2>/dev/null
}

# Plantilla base para la p√°gina del cv.
template() { cat <<EOF
<!DOCTYPE html>
<html lang="${RESUME_LANG:-es}">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>${RESUME_TITLE:-Resume}</title>
  <link rel="stylesheet" href="${RESUME_CSS:-https://cdnjs.cloudflare.com/ajax/libs/github-markdown-css/5.8.1/github-markdown.min.css}">

  <style>
    .markdown-body {
      box-sizing: border-box;
      min-width: 200px;
      max-width: 980px;
      margin: 0 auto;
      padding: 45px;
    }

    @media (max-width: 767px) {
      .markdown-body {
        padding: 15px;
      }
    }
  </style>
</head>
<body class="markdown-body">
  $(markdown2html src/resume.md)
</body>
</html>
EOF
}

# Convierte un archivo HTML a PDF.
html2pdf() {
  wkhtmltopdf \
    --margin-top 0 \
    --margin-right 0 \
    --margin-bottom 0 \
    --margin-left 0 \
    --enable-local-file-access \
    "$1" "$2"
}

main() {
  command -v smu >/dev/null ||
    error "'smu' is not installed"

  command -v wkhtmltopdf >/dev/null ||
    error "'wkhtmltopdf' is not installed"

  mkdir -p src docs ||
    error "Curriculum directories cannot be created"

  # shellcheck source=/dev/null
  [ -r resume.cfg ] && . ./resume.cfg

  template > docs/index.html

  cd docs || error "Can't access the 'docs' directory"

  html2pdf "index.html" "cv.pdf"
}

main
